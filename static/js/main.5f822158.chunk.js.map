{"version":3,"sources":["logo.svg","Calculator.js","NewGame.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","roundPointCalculator","game","roundIndex","playerIndex","undefined","call","parseInt","result","toString","calculateResult","console","log","p1sum","s1","p2sum","s2","p3sum","s3","p4sum","s4","forEach","round","index","calculate","parseFloat","getSum","toFixed","sum","sumNumber","Math","floor","sumDecimal","abs","x","totalDecimal","NewGame","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","state","editRoundIndex","_this2","react_default","a","createElement","class","scope","map","getItem","rowspan","_this3","Fragment","getSelectRow","onClick","saveItem","resultMessage","editItem","playerValue","_this4","items","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","value","_ref2","slicedToArray","push","key","err","return","onChange","e","handleInputChange","event","target","roundArray","setState","resultEntry","allEntry","resultSum","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref9","_ref5","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref8","_ref7","length","alert","_this5","React","Component","App","localStorage","setItem","JSON","stringify","gameId","players","games","parse","Array","from","currentGameId","currentGameIndex","currentGame","splice","allGames","className","NewGame_NewGame","gameIndex","calcuateRoundPoint","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f822158.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export  function roundPointCalculator(game,roundIndex, playerIndex){\n\n        if(game['call'][roundIndex] === undefined || !game['call'][roundIndex][playerIndex] ){\n            return '';\n        }\n\n        let call = parseInt(game['call'][roundIndex][playerIndex]);\n\n        if(game['result'][roundIndex] === undefined || !game['result'][roundIndex][playerIndex] ){\n            return call;\n        }\n        let result = parseInt(game['result'][roundIndex][playerIndex]);\n        \n        if(result < call) {\n            return '-' + call;\n        }\n        else if(call === result ){\n            return '' + call.toString() + '.0';\n        }else{\n            return '' + call.toString() + '.' + (result-call);\n        }\n}\n\nexport function calculateResult(game){\n    console.log('calculate result')\n    let \n    p1sum = 0.0, s1 =0,\n    p2sum = 0.0, s2 =0,\n    p3sum = 0.0, s3 =0,\n    p4sum = 0.0, s4 =0;\n\n    game['call'].forEach((round,index) =>{\n\n       s1 = game['result'][index] !== undefined ? calculate(parseFloat(round[0]), parseFloat(game['result'][index][0])) : parseFloat(round[0]);\n       s2 = game['result'][index] !== undefined ? calculate(parseFloat(round[1]), parseFloat(game['result'][index][1])) : parseFloat(round[1]);\n       s3 = game['result'][index] !== undefined ? calculate(parseFloat(round[2]), parseFloat(game['result'][index][2])) : parseFloat(round[2]);\n       s4 = game['result'][index] !== undefined ? calculate(parseFloat(round[3]), parseFloat(game['result'][index][3])) : parseFloat(round[3]);\n       \n       p1sum = getSum(p1sum,s1);\n       p2sum = getSum(p2sum,s2);\n       p3sum = getSum(p3sum,s3);\n       p4sum = getSum(p4sum,s4);\n\n    });\n    \n    return [p1sum.toFixed(1),p2sum.toFixed(1),p3sum.toFixed(1),p4sum.toFixed(1)]\n     \n  }\n\n  function getSum(sum, p){\n\n    let sumNumber = sum < 0 ? Math.floor(sum) : Math.floor(sum);\n    let sumDecimal = Math.abs(sum) - Math.abs(Math.floor(sum));\n\n    let pNumber = p < 0 ?  Math.floor(p) : Math.floor(p);\n    let pDecimal = Math.abs(p) - Math.abs(Math.floor(p));\n\n    let x = sumNumber + pNumber;\n\n    let totalDecimal = sumDecimal + pDecimal;\n\n    \n    if(totalDecimal > 1){\n      x = x + 1 ;\n      totalDecimal = totalDecimal - 1;\n    }\n    if(x < 0 ) {\n      return -1 * (Math.abs(x) + totalDecimal);\n    }else {\n      return x + totalDecimal;\n    }\n\n  }\n\n  function calculate (call, result) {\n    let sum = 0.0;\n    if(result < call) {\n      sum =  - 1 * call;\n    }\n    else if(call === result ){\n      sum = call;\n    }else{\n      sum = call +  (result-call)/10;\n    }\n    return sum;\n  }","import React from 'react';\nimport {roundPointCalculator,calculateResult} from './Calculator.js';\n\nexport default class NewGame extends React.Component {\n\n    constructor(props){\n        super(props);\n        \n        this.state = {\n            game : props.game, editRoundIndex: null\n        }\n    }\n\n    render() {\n\n        return (\n        <div>\n        <h2> Finish Game </h2>\n        <table class=\"table table-dark\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Round</th>\n                <th scope=\"col\"></th>\n                <th scope=\"col\">{this.state.game['players'][0]}</th>\n                <th scope=\"col\">{this.state.game['players'][1]}</th>\n                <th scope=\"col\">{this.state.game['players'][2]}</th>\n                <th scope=\"col\">{this.state.game['players'][3]}</th>\n                <th scope=\"col\"></th>\n              </tr>\n            </thead>\n            <tbody>\n               { this.state.game['call'].map(( round, roundIndex ) => (\n                   this.getItem(round,roundIndex)\n                ))\n                }\n            </tbody>\n            <tfoot>\n              <tr>\n              <td rowspan=\"2\">Result</td>\n              <td></td>\n              <td>{ calculateResult(this.state.game)[0] }</td>\n              <td>{ calculateResult(this.state.game)[1] }</td>\n              <td>{ calculateResult(this.state.game)[2] }</td>\n              <td>{ calculateResult(this.state.game)[3] }</td>\n              </tr>\n            </tfoot>\n          </table>\n          </div>\n        )\n    }\n\n    getItem (round,roundIndex) {\n        if(this.state.editRoundIndex === roundIndex ){\n            return (\n                <>\n                <tr>\n                    <td rowspan=\"2\">{roundIndex+1}</td>\n                    <td>call</td>\n                    {\n                        this.getSelectRow(true,0,round[0])\n                    }\n                    {\n                        this.getSelectRow(true,1,round[1])\n                    }\n                    {\n                        this.getSelectRow(true,2,round[2])\n                    }\n                    {\n                        this.getSelectRow(true,3,round[3])\n                    }\n                    \n                    <td rowspan=\"2\"><button onClick={()=> {this.saveItem(roundIndex)}}> Save </button></td>\n                </tr>\n                <tr>\n                    \n                    <td>points</td>\n                    {\n                        this.getSelectRow(false,0,this.state.game['result'][roundIndex] && this.state.game['result'][roundIndex][0])\n                    }\n                    {\n                        this.getSelectRow(false,1,this.state.game['result'][roundIndex] && this.state.game['result'][roundIndex][1])\n                    }\n                    {\n                        this.getSelectRow(false,2,this.state.game['result'][roundIndex] && this.state.game['result'][roundIndex][2])\n                    }\n                    {\n                        this.getSelectRow(false,3,this.state.game['result'][roundIndex] && this.state.game['result'][roundIndex][3])\n                    }\n                </tr>\n                <tr>\n                    <td>{this.state.resultMessage}</td>\n                </tr>\n            </>\n            )\n        }else {\n        \n        return (\n            <tr>\n                <td >{roundIndex+1}</td>\n                <td ></td>\n                <td>{ roundPointCalculator(this.state.game,roundIndex,0)}</td>\n                <td>{ roundPointCalculator(this.state.game,roundIndex,1)}</td>\n                <td>{ roundPointCalculator(this.state.game,roundIndex,2)}</td>\n                <td>{ roundPointCalculator(this.state.game,roundIndex,3)}</td>\n                <td><button onClick={()=> {this.editItem(roundIndex)}}> Edit </button></td>\n            </tr>\n        )\n        }\n    }\n\n    getSelectRow (call,roundIndex, playerValue) {\n        \n        const items = [];\n        for (const [index, value] of [0,1,2,3,4,5,6,7,8,9,10,11,12,13].entries()) {\n            items.push(<option key={index} value={value}>{value}</option>)\n        }\n        return (\n            <td>\n                <select value={playerValue} onChange={(e)=> this.handleInputChange(e,call,roundIndex)}>\n                    <option value=\"\">Select</option>\n                    {items}\n                </select>\n            </td>\n        );\n    }\n\n    handleInputChange(event, call,roundIndex) {\n        const value = event.target.value === \"\" ? null : event.target.value; \n        let roundArray = this.state.game;\n        if(call){\n            roundArray['call'][this.state.editRoundIndex][roundIndex] = value;\n        }else{\n            roundArray['result'][this.state.editRoundIndex][roundIndex] = value;\n        }\n        this.setState({game: roundArray});\n\n  }\n\n    editItem (roundIndex){\n\n        let roundArray = this.state.game;\n        if(!this.state.game['call'][roundIndex]){\n            roundArray['call'][roundIndex] = [null,null,null,null];\n        }\n        if(!this.state.game['result'][roundIndex]){\n            roundArray['result'][roundIndex] = [null,null,null,null];\n        }\n\n        this.setState({editRoundIndex:roundIndex, game:roundArray});\n    }\n\n    saveItem(roundIndex){\n        let resultEntry = false, allEntry = true, resultSum = 0;\n        let resultMessage = '';\n        for (const [key,value] of this.state.game['result'][this.state.editRoundIndex].entries()) {\n            if(value){\n                resultEntry = true;\n            }\n        }\n        if(resultEntry){\n            for (const [key,value] of this.state.game['result'][this.state.editRoundIndex].entries()) {\n                if(value){\n                    resultSum = resultSum + parseInt(value);\n                }\n                else{\n                    allEntry = false;\n                }\n            }\n        }\n\n        if(resultEntry){\n            if(!allEntry){\n                resultMessage = 'Enter all points';\n            }\n            else if(resultSum !== 13) {\n                \n                resultMessage = 'Sum of all points must be 13';\n            }\n            else{\n                \n                let game = this.state.game;\n                if(game['call'].length < 5){\n                    game['call'].push([null,null,null,null]) ;\n                    game['result'].push([null,null,null,null]);\n                }\n                this.setState({editRoundIndex: null, resultMessage:resultMessage });\n\n            }\n        }\n        else{\n            this.setState({editRoundIndex: null, resultMessage:resultMessage });\n        }\n        if(resultMessage !== ''){\n            alert(resultMessage);\n        }\n    }\n\n    calculateResult(game){\n    \n    let \n    p1sum = 0.0, s1 =0,\n    p2sum = 0.0, s2 =0,\n    p3sum = 0.0, s3 =0,\n    p4sum = 0.0, s4 =0;\n\n    game['call'].forEach((round,index) =>{\n\n       s1 = game['result'][index] !== undefined ? this.calculate(parseFloat(round[0]), parseFloat(game['result'][index][0])) : parseFloat(round[0]);\n       s2 = game['result'][index] !== undefined ? this.calculate(parseFloat(round[1]), parseFloat(game['result'][index][1])) : parseFloat(round[1]);\n       s3 = game['result'][index] !== undefined ? this.calculate(parseFloat(round[2]), parseFloat(game['result'][index][2])) : parseFloat(round[2]);\n       s4 = game['result'][index] !== undefined ? this.calculate(parseFloat(round[3]), parseFloat(game['result'][index][3])) : parseFloat(round[3]);\n       \n       p1sum = this.getSum(p1sum,s1);\n       p2sum = this.getSum(p2sum,s2);\n       p3sum = this.getSum(p3sum,s3);\n       p4sum = this.getSum(p4sum,s4);\n\n    });\n    \n    return [p1sum.toFixed(1),p2sum.toFixed(1),p3sum.toFixed(1),p4sum.toFixed(1)]\n     \n  }\n\n  calculate (call, result) {\n    let sum = 0.0;\n    if(result < call) {\n      sum =  - 1 * call;\n    }\n    else if(call === result ){\n      sum = call;\n    }else{\n      sum = call +  (result-call)/10;\n    }\n    return sum;\n  }\n\n  getSum(sum, p){\n\n    let sumNumber = sum < 0 ? Math.floor(sum) : Math.floor(sum);\n    let sumDecimal = Math.abs(sum) - Math.abs(Math.floor(sum));\n\n    let pNumber = p < 0 ?  Math.floor(p) : Math.floor(p);\n    let pDecimal = Math.abs(p) - Math.abs(Math.floor(p));\n\n    let x = sumNumber + pNumber;\n\n    let totalDecimal = sumDecimal + pDecimal;\n\n    \n    if(totalDecimal > 1){\n      x = x + 1 ;\n      totalDecimal = totalDecimal - 1;\n    }\n    if(x < 0 ) {\n      return -1 * (Math.abs(x) + totalDecimal);\n    }else {\n      return x + totalDecimal;\n    }\n\n  }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport NewGame from './NewGame'\nimport './App.css';\n\nexport default class App extends React.Component {\n\nconstructor(props){\n  super(props);\n\n  // localStorage.removeItem('games');\n  localStorage.setItem('games',JSON.stringify([\n    {\n      'gameId': '1562981303623',\n        'players': ['Ananda', 'Sangita', 'Sarad', 'Prakash'],\n        'call': [\n            [1,2,3,4],[3,2,2,1],[4,3,2,2],[1,2,4,5],[3,3,4,1]\n        ],\n        'result':[\n            [2,3,3,5],[4,1,3,5],[2,3,3,5],[2,3,3,5],[2,3,3,5]\n        ]\n    },\n    {\n      'gameId': '1562981303624',\n        'players': ['Ananda', 'Sangita', 'Sajal', 'Prakash'],\n        'call': [\n            [1,2,3,4],[2,2,2,1],[4,3,2,2],[1,2,4,5],[3,3,4,1]\n        ],\n        'result':[\n            [2,4,4,3],[1,4,3,2],[2,3,3,5],[2,3,3,5],[2,3,3,5]\n        ]\n    },\n    {\n      'gameId': '1562981303625',\n        'players': ['Ananda', 'Sangita', 'Sajal', 'Prakash'],\n        'call': [\n            [1,2,3,4]\n        ],\n        'result':[\n\n        ]\n    }\n  ])\n  );\n  localStorage.setItem('currentGameId','1562981303625');\n  let games = localStorage.getItem('games') ? JSON.parse(localStorage.getItem('games')) : [];\n  games = Array.from(games);\n  let currentGameId = localStorage.getItem('currentGameId');\n  let currentGameIndex = null;\n  let currentGame = null;\n  games.forEach((game,index) => {\n    if(game.gameId === currentGameId){\n      currentGameIndex = index;\n      currentGame = game;\n    }\n  });\n\n  games.splice(currentGameIndex, 1);\n  this.state = {games:games,currentGame: currentGame};\n\n}\n  render () {\n    let allGames = this.state.games;\n    return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Call Break Counter </h1>\n      </header>\n      <div className=\"container body-container\">\n          {\n            <NewGame game={this.state.currentGame}/>\n          }\n\n          { allGames.map(( game, gameIndex ) => (\n             \n          <table class=\"table table-dark\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Round</th>\n                <th scope=\"col\">{game['players'][0]}</th>\n                <th scope=\"col\">{game['players'][1]}</th>\n                <th scope=\"col\">{game['players'][2]}</th>\n                <th scope=\"col\">{game['players'][3]}</th>\n              </tr>\n            </thead>\n            <tbody>\n               { game['call'].map(( round, roundIndex ) => (\n                   <tr>\n                  <td>{roundIndex+1}</td>\n                  <td>{ game['result'][roundIndex] !== undefined ? this.calcuateRoundPoint(round[0],game['result'][roundIndex][0]) : round[0]}</td>\n                  <td>{ game['result'][roundIndex] !== undefined ? this.calcuateRoundPoint(round[1],game['result'][roundIndex][1]) : round[1]}</td>\n                  <td>{ game['result'][roundIndex] !== undefined ? this.calcuateRoundPoint(round[2],game['result'][roundIndex][2]) : round[2]}</td>\n                  <td>{ game['result'][roundIndex] !== undefined ? this.calcuateRoundPoint(round[3],game['result'][roundIndex][3]) : round[3]}</td>\n                </tr>\n                \n                ))\n                }\n            </tbody>\n            <tfoot>\n              <tr>\n              <td>Result</td>\n              <td>{this.calculateResult(game)[0]}</td>\n              <td>{this.calculateResult(game)[1]}</td>\n              <td>{this.calculateResult(game)[2]}</td>\n              <td>{this.calculateResult(game)[3]}</td>\n              </tr>\n            </tfoot>\n          </table>\n        ))  \n          }\n      </div>\n      </div>\n    )\n  }\n\n  calcuateRoundPoint(call, result){\n    call = parseInt(call);\n    result = parseInt(result);\n    if(result < call) {\n      return '-' + call;\n    }\n    else if(call === result ){\n      return '' + call.toString() + '.0';\n    }else{\n      return '' + call.toString() + '.' + (result-call);\n    }\n  }\n\n  calculateResult(game){\n    \n    let \n    p1sum = 0.0, s1 =0,\n    p2sum = 0.0, s2 =0,\n    p3sum = 0.0, s3 =0,\n    p4sum = 0.0, s4 =0;\n\n    game['call'].forEach((round,index) =>{\n\n       s1 = game['result'][index] !== undefined ? this.calculate(parseFloat(round[0]), parseFloat(game['result'][index][0])) : parseFloat(round[0]);\n       s2 = game['result'][index] !== undefined ? this.calculate(parseFloat(round[1]), parseFloat(game['result'][index][1])) : parseFloat(round[1]);\n       s3 = game['result'][index] !== undefined ? this.calculate(parseFloat(round[2]), parseFloat(game['result'][index][2])) : parseFloat(round[2]);\n       s4 = game['result'][index] !== undefined ? this.calculate(parseFloat(round[3]), parseFloat(game['result'][index][3])) : parseFloat(round[3]);\n       \n       p1sum = this.getSum(p1sum,s1);\n       p2sum = this.getSum(p2sum,s2);\n       p3sum = this.getSum(p3sum,s3);\n       p4sum = this.getSum(p4sum,s4);\n\n    });\n    \n    return [p1sum.toFixed(1),p2sum.toFixed(1),p3sum.toFixed(1),p4sum.toFixed(1)]\n     \n  }\n\n  calculate (call, result) {\n    let sum = 0.0;\n    if(result < call) {\n      sum =  - 1 * call;\n    }\n    else if(call === result ){\n      sum = call;\n    }else{\n      sum = call +  (result-call)/10;\n    }\n    return sum;\n  }\n\n  getSum(sum, p){\n\n    let sumNumber = sum < 0 ? Math.floor(sum) : Math.floor(sum);\n    let sumDecimal = Math.abs(sum) - Math.abs(Math.floor(sum));\n\n    let pNumber = p < 0 ?  Math.floor(p) : Math.floor(p);\n    let pDecimal = Math.abs(p) - Math.abs(Math.floor(p));\n\n    let x = sumNumber + pNumber;\n\n    let totalDecimal = sumDecimal + pDecimal;\n\n    \n    if(totalDecimal > 1){\n      x = x + 1 ;\n      totalDecimal = totalDecimal - 1;\n    }\n    if(x < 0 ) {\n      return -1 * (Math.abs(x) + totalDecimal);\n    }else {\n      return x + totalDecimal;\n    }\n\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
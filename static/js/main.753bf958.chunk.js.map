{"version":3,"sources":["logo.svg","NewGame.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NewGame","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","React","Component","App","_this","localStorage","setItem","JSON","stringify","gameId","players","result","games","getItem","parse","state","Array","from","_this2","allGames","className","onClick","startGame","NewGame_NewGame","map","game","gameIndex","class","scope","round","roundIndex","undefined","calcuateRoundPoint","calculateResult","alert","parseInt","toString","_this3","p1sum","s1","p2sum","s2","p3sum","s3","p4sum","s4","forEach","index","calculate","parseFloat","getSum","toFixed","sum","sumNumber","Math","floor","sumDecimal","abs","pNumber","pDecimal","x","console","log","totalDecimal","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6KCGnBC,qBAEjB,SAAAA,EAAYC,GAAO,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KACTH,0EAIN,OAAOO,EAAAC,EAAAC,cAAA,iCAPsBC,IAAMC,YCEtBC,qBAErB,SAAAA,EAAYZ,GAAM,IAAAa,EAAAZ,OAAAC,EAAA,EAAAD,CAAAE,KAAAS,GAChBC,EAAAZ,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAW,GAAAN,KAAAH,KAAMH,IAGNc,aAAaC,QAAQ,QAAQC,KAAKC,UAAU,CAC1C,CACEC,OAAU,EACRC,QAAW,CAAC,SAAU,UAAW,QAAS,WAC1Cb,KAAQ,CACJ,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,IAEnDc,OAAS,CACL,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,KAGvD,CACEF,OAAU,EACRC,QAAW,CAAC,SAAU,UAAW,QAAS,WAC1Cb,KAAQ,CACJ,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,IAEnDc,OAAS,CACL,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,KAGvD,CACEF,OAAU,EACRC,QAAW,CAAC,SAAU,UAAW,QAAS,WAC1Cb,KAAQ,CACJ,CAAC,EAAE,EAAE,EAAE,IAEXc,OAAS,OAOf,IAAIC,EAAQP,aAAaQ,QAAQ,SAAWN,KAAKO,MAAMT,aAAaQ,QAAQ,UAAY,GAtCxE,OAuChBT,EAAKW,MAAQ,CAACH,MAAMI,MAAMC,KAAKL,IAvCfR,wEA0CN,IAAAc,EAAAxB,KACJyB,EAAWzB,KAAKqB,MAAMH,MAC1B,OACAd,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,OACbtB,EAAAC,EAAAC,cAAA,UAAQoB,UAAU,cAChBtB,EAAAC,EAAAC,cAAA,kCAEFF,EAAAC,EAAAC,cAAA,UAAQqB,QAAS,kBAAKH,EAAKI,cAA3B,kBACAxB,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,4BAGTtB,EAAAC,EAAAC,cAACuB,EAAD,MAGAJ,EAASK,IAAI,SAAEC,EAAMC,GAAR,OAEf5B,EAAAC,EAAAC,cAAA,SAAO2B,MAAM,oBACX7B,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAI4B,MAAM,OAAV,SACA9B,EAAAC,EAAAC,cAAA,MAAI4B,MAAM,OAAOH,EAAI,QAAY,IACjC3B,EAAAC,EAAAC,cAAA,MAAI4B,MAAM,OAAOH,EAAI,QAAY,IACjC3B,EAAAC,EAAAC,cAAA,MAAI4B,MAAM,OAAOH,EAAI,QAAY,IACjC3B,EAAAC,EAAAC,cAAA,MAAI4B,MAAM,OAAOH,EAAI,QAAY,MAGrC3B,EAAAC,EAAAC,cAAA,aACKyB,EAAI,KAASD,IAAI,SAAEK,EAAOC,GAAT,OACfhC,EAAAC,EAAAC,cAAA,UACDF,EAAAC,EAAAC,cAAA,UAAK8B,EAAW,GAChBhC,EAAAC,EAAAC,cAAA,eAAqC+B,IAA/BN,EAAI,OAAWK,GAA4BZ,EAAKc,mBAAmBH,EAAM,GAAGJ,EAAI,OAAWK,GAAY,IAAMD,EAAM,IACzH/B,EAAAC,EAAAC,cAAA,eAAqC+B,IAA/BN,EAAI,OAAWK,GAA4BZ,EAAKc,mBAAmBH,EAAM,GAAGJ,EAAI,OAAWK,GAAY,IAAMD,EAAM,IACzH/B,EAAAC,EAAAC,cAAA,eAAqC+B,IAA/BN,EAAI,OAAWK,GAA4BZ,EAAKc,mBAAmBH,EAAM,GAAGJ,EAAI,OAAWK,GAAY,IAAMD,EAAM,IACzH/B,EAAAC,EAAAC,cAAA,eAAqC+B,IAA/BN,EAAI,OAAWK,GAA4BZ,EAAKc,mBAAmBH,EAAM,GAAGJ,EAAI,OAAWK,GAAY,IAAMD,EAAM,QAM/H/B,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,UAAKkB,EAAKe,gBAAgBR,GAAM,IAChC3B,EAAAC,EAAAC,cAAA,UAAKkB,EAAKe,gBAAgBR,GAAM,IAChC3B,EAAAC,EAAAC,cAAA,UAAKkB,EAAKe,gBAAgBR,GAAM,IAChC3B,EAAAC,EAAAC,cAAA,UAAKkB,EAAKe,gBAAgBR,GAAM,+CAY1CS,MAAM,yDAGWrC,EAAMc,GAGvB,OAFAd,EAAOsC,SAAStC,IAChBc,EAASwB,SAASxB,IACNd,EACH,IAAMA,EAEPA,IAASc,EACHd,EAAKuC,WAAa,KAElBvC,EAAKuC,WAAa,KAAOzB,EAAOd,2CAIhC4B,GAAK,IAAAY,EAAA3C,KAGnB4C,EAAQ,EAAKC,EAAI,EACjBC,EAAQ,EAAKC,EAAI,EACjBC,EAAQ,EAAKC,EAAI,EACjBC,EAAQ,EAAKC,EAAI,EAgBjB,OAdApB,EAAI,KAASqB,QAAQ,SAACjB,EAAMkB,GAEzBR,OAA+BR,IAA1BN,EAAI,OAAWsB,GAAuBV,EAAKW,UAAUC,WAAWpB,EAAM,IAAKoB,WAAWxB,EAAI,OAAWsB,GAAO,KAAOE,WAAWpB,EAAM,IACzIY,OAA+BV,IAA1BN,EAAI,OAAWsB,GAAuBV,EAAKW,UAAUC,WAAWpB,EAAM,IAAKoB,WAAWxB,EAAI,OAAWsB,GAAO,KAAOE,WAAWpB,EAAM,IACzIc,OAA+BZ,IAA1BN,EAAI,OAAWsB,GAAuBV,EAAKW,UAAUC,WAAWpB,EAAM,IAAKoB,WAAWxB,EAAI,OAAWsB,GAAO,KAAOE,WAAWpB,EAAM,IACzIgB,OAA+Bd,IAA1BN,EAAI,OAAWsB,GAAuBV,EAAKW,UAAUC,WAAWpB,EAAM,IAAKoB,WAAWxB,EAAI,OAAWsB,GAAO,KAAOE,WAAWpB,EAAM,IAEzIS,EAAQD,EAAKa,OAAOZ,EAAMC,GAC1BC,EAAQH,EAAKa,OAAOV,EAAMC,GAC1BC,EAAQL,EAAKa,OAAOR,EAAMC,GAC1BC,EAAQP,EAAKa,OAAON,EAAMC,KAItB,CAACP,EAAMa,QAAQ,GAAGX,EAAMW,QAAQ,GAAGT,EAAMS,QAAQ,GAAGP,EAAMO,QAAQ,sCAIhEtD,EAAMc,GAUf,OARGA,EAASd,GACD,EAAIA,EAEPA,IAASc,EACTd,EAEAA,GAASc,EAAOd,GAAM,kCAKzBuD,EAAK/D,GAEV,IAAIgE,EAAsBC,KAAKC,MAAMH,GACjCI,EAAaF,KAAKG,IAAIL,GAAOE,KAAKG,IAAIH,KAAKC,MAAMH,IAEjDM,EAAmBJ,KAAKC,MAAMlE,GAC9BsE,EAAWL,KAAKG,IAAIpE,GAAKiE,KAAKG,IAAIH,KAAKC,MAAMlE,IAE7CuE,EAAIP,EAAYK,EAEpBG,QAAQC,IAAI,aAAaT,EAAU,aAAaG,EAAW,YAAaE,EAAS,YAAaC,GAC9F,IAAII,EAAeP,EAAaG,EAQhC,OALGI,EAAe,IAChBH,GAAQ,EACRG,GAA8B,GAEjCF,QAAQC,IAAI,0BAA0BF,EAAGG,GACrCH,EAAI,GACG,GAAKN,KAAKG,IAAIG,GAAKG,IAE3BF,QAAQC,IAAI,mBAAmBF,EAAIG,GAC5BH,EAAIG,UAnLgB9D,IAAMC,YCOnB8D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECXNC,IAASC,OAAOxE,EAAAC,EAAAC,cAACuE,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.753bf958.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\n\nexport default class NewGame extends React.Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        return <span> New Game </span>\n    }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport NewGame from './NewGame'\nimport './App.css';\n\nexport default class App extends React.Component {\n\nconstructor(props){\n  super(props);\n\n  // localStorage.removeItem('games');\n  localStorage.setItem('games',JSON.stringify([\n    {\n      'gameId': 1,\n        'players': ['Ananda', 'Sangita', 'Sarad', 'Prakash'],\n        'call': [\n            [1,2,3,4],[3,2,2,1],[4,3,2,2],[1,2,4,5],[3,3,4,1]\n        ],\n        'result':[\n            [2,3,3,5],[4,1,3,5],[2,3,3,5],[2,3,3,5],[2,3,3,5]\n        ]\n    },\n    {\n      'gameId': 2,\n        'players': ['Ananda', 'Sangita', 'Sajal', 'Prakash'],\n        'call': [\n            [1,2,3,4],[2,2,2,1],[4,3,2,2],[1,2,4,5],[3,3,4,1]\n        ],\n        'result':[\n            [2,4,4,3],[1,4,3,2],[2,3,3,5],[2,3,3,5],[2,3,3,5]\n        ]\n    },\n    {\n      'gameId': 3,\n        'players': ['Ananda', 'Sangita', 'Sajal', 'Prakash'],\n        'call': [\n            [1,2,3,4]\n        ],\n        'result':[\n            \n        ]\n    }\n  ])\n  );\n  \n  let games = localStorage.getItem('games') ? JSON.parse(localStorage.getItem('games')) : [];\n  this.state = {games:Array.from(games)};\n\n}\n  render () {\n    let allGames = this.state.games;\n    return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Call Break Counter </h1>\n      </header>\n      <button onClick={()=> this.startGame()}> Start a Game </button>\n      <div className=\"container body-container\">\n\n          {\n            <NewGame/>\n          }\n\n          { allGames.map(( game, gameIndex ) => (\n             \n          <table class=\"table table-dark\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Round</th>\n                <th scope=\"col\">{game['players'][0]}</th>\n                <th scope=\"col\">{game['players'][1]}</th>\n                <th scope=\"col\">{game['players'][2]}</th>\n                <th scope=\"col\">{game['players'][3]}</th>\n              </tr>\n            </thead>\n            <tbody>\n               { game['call'].map(( round, roundIndex ) => (\n                   <tr>\n                  <td>{roundIndex+1}</td>\n                  <td>{ game['result'][roundIndex] !== undefined ? this.calcuateRoundPoint(round[0],game['result'][roundIndex][0]) : round[0]}</td>\n                  <td>{ game['result'][roundIndex] !== undefined ? this.calcuateRoundPoint(round[1],game['result'][roundIndex][1]) : round[1]}</td>\n                  <td>{ game['result'][roundIndex] !== undefined ? this.calcuateRoundPoint(round[2],game['result'][roundIndex][2]) : round[2]}</td>\n                  <td>{ game['result'][roundIndex] !== undefined ? this.calcuateRoundPoint(round[3],game['result'][roundIndex][3]) : round[3]}</td>\n                </tr>\n                \n                ))\n                }\n            </tbody>\n            <tfoot>\n              <tr>\n              <td>Result</td>\n              <td>{this.calculateResult(game)[0]}</td>\n              <td>{this.calculateResult(game)[1]}</td>\n              <td>{this.calculateResult(game)[2]}</td>\n              <td>{this.calculateResult(game)[3]}</td>\n              </tr>\n            </tfoot>\n          </table>\n        ))  \n          }\n      </div>\n      </div>\n    )\n  }\n\n  startGame() {\n    alert('start game');\n  }\n\n  calcuateRoundPoint(call, result){\n    call = parseInt(call);\n    result = parseInt(result);\n    if(result < call) {\n      return '-' + call;\n    }\n    else if(call === result ){\n      return '' + call.toString() + '.0';\n    }else{\n      return '' + call.toString() + '.' + (result-call);\n    }\n  }\n\n  calculateResult(game){\n    \n    let \n    p1sum = 0.0, s1 =0,\n    p2sum = 0.0, s2 =0,\n    p3sum = 0.0, s3 =0,\n    p4sum = 0.0, s4 =0;\n\n    game['call'].forEach((round,index) =>{\n\n       s1 = game['result'][index] !== undefined ? this.calculate(parseFloat(round[0]), parseFloat(game['result'][index][0])) : parseFloat(round[0]);\n       s2 = game['result'][index] !== undefined ? this.calculate(parseFloat(round[1]), parseFloat(game['result'][index][1])) : parseFloat(round[1]);\n       s3 = game['result'][index] !== undefined ? this.calculate(parseFloat(round[2]), parseFloat(game['result'][index][2])) : parseFloat(round[2]);\n       s4 = game['result'][index] !== undefined ? this.calculate(parseFloat(round[3]), parseFloat(game['result'][index][3])) : parseFloat(round[3]);\n       \n       p1sum = this.getSum(p1sum,s1);\n       p2sum = this.getSum(p2sum,s2);\n       p3sum = this.getSum(p3sum,s3);\n       p4sum = this.getSum(p4sum,s4);\n\n    });\n    \n    return [p1sum.toFixed(1),p2sum.toFixed(1),p3sum.toFixed(1),p4sum.toFixed(1)]\n     \n  }\n\n  calculate (call, result) {\n    let sum = 0.0;\n    if(result < call) {\n      sum =  - 1 * call;\n    }\n    else if(call === result ){\n      sum = call;\n    }else{\n      sum = call +  (result-call)/10;\n    }\n    return sum;\n  }\n\n  getSum(sum, p){\n\n    let sumNumber = sum < 0 ? Math.floor(sum) : Math.floor(sum);\n    let sumDecimal = Math.abs(sum) - Math.abs(Math.floor(sum));\n\n    let pNumber = p < 0 ?  Math.floor(p) : Math.floor(p);\n    let pDecimal = Math.abs(p) - Math.abs(Math.floor(p));\n\n    let x = sumNumber + pNumber;\n\n    console.log('sumNumber ',sumNumber,'sumDecimal',sumDecimal,' pNumber ', pNumber, ' pDecimal', pDecimal);\n    let totalDecimal = sumDecimal + pDecimal;\n\n    \n    if(totalDecimal > 1){\n      x = x + 1 ;\n      totalDecimal = totalDecimal - 1;\n    }\n   console.log('x and total decimal is ',x, totalDecimal);\n    if(x < 0 ) {\n      return -1 * (Math.abs(x) + totalDecimal);\n    }else {\n      console.log('x + totalDecimal',x + totalDecimal);\n      return x + totalDecimal;\n    }\n\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}